// <auto-generated />
using System;
using BookstoreApp.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookstoreApp.Infrastructure.Migrations
{
    [DbContext(typeof(BookstoreDbContext))]
    [Migration("20250504094919_Added_Info_In_Author_Description_In_Book")]
    partial class Added_Info_In_Author_Description_In_Book
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookstoreApp.Domain.Entities.Author", b =>
                {
                    b.Property<Guid>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Name = "George Orwell"
                        },
                        new
                        {
                            AuthorId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Name = "J.K. Rowling"
                        });
                });

            modelBuilder.Entity("BookstoreApp.Domain.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = new Guid("11111111-1111-1111-1111-111111111111"),
                            AuthorName = "George Orwell",
                            BookId = new Guid("33333333-3333-3333-3333-333333333333"),
                            CategoryId = 1,
                            ISBN = "9780451524935",
                            Price = 15,
                            StockQuantity = 100,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = new Guid("22222222-2222-2222-2222-222222222222"),
                            AuthorName = "J.K. Rowling",
                            BookId = new Guid("44444444-4444-4444-4444-444444444444"),
                            CategoryId = 2,
                            ISBN = "9780747532699",
                            Price = 20,
                            StockQuantity = 50,
                            Title = "Harry Potter and the Philosopher's Stone"
                        });
                });

            modelBuilder.Entity("BookstoreApp.Domain.Entities.Book", b =>
                {
                    b.HasOne("BookstoreApp.Domain.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("BookstoreApp.Domain.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
